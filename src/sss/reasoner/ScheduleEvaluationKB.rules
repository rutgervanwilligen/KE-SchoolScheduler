package sss.reasoner;

import sss.scheduler.objects.Schedule;
import sss.scheduler.objects.Lesson;
import sss.scheduler.objects.Teacher;
import sss.scheduler.objects.ClassInSchool;
import sss.scheduler.objects.LessonHour;

/**
 * Rule base used to evaluate a schedule.
 */
public ruleBase ScheduleEvaluationKB {

  rule evaluationRule1 {
    declarations
      Schedule schedule;
      ClassInSchool classInSchool;
    localdecl
      Integer nrOfBetweenHours = classInSchool.getNumberOfBetweenHours();
    conditions
      nrOfBetweenHours > 0;
    actions
      schedule.addToRating(nrOfBetweenHours * -1000);
      System.out.println("evaluationRule1 fired for " + classInSchool.getName() + " with " + (nrOfBetweenHours * 1000) + " penalty points.");
  }

  rule evaluationRule2 {
    declarations
      Schedule schedule;
      ClassInSchool classInSchool;
      LessonHour lessonHour;
    conditions
      !classInSchool.isAvailable(lessonHour);
	  lessonHour.getHour() == 9;
    actions
      schedule.addToRating(-29);
      System.out.println("evaluationRule2 fired for " + classInSchool.getName() + " on " + lessonHour.getWeekday());
  }
  
  rule evaluationRule3 {
    declarations
      ClassInSchool classInSchool;
    conditions
    actions
      System.out.println("evaluationRule3 fired for " + classInSchool.getName());
      retract(classInSchool);
  }
}