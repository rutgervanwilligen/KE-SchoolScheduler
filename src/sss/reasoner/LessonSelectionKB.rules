package sss.reasoner;

import sss.scheduler.objects.Lesson;
import sss.scheduler.objects.Schedule;

/**
 * Rule base used to select lessons.
 */
public ruleBase BaseLesson {

  rule lessonSelection1 {
  /* First, all LO lessons should be picked for allocating */
    declarations
      Lesson lesson;
      Schedule schedule;
    conditions
      schedule.schedulingSetIsEmpty();
      schedule.containsUnallocatedLesson(lesson);
      lesson.getSubject().getCode().equals("LO");
      !lesson.isAllocatedToTimeslot();
    actions
	  schedule.addToSchedulingSet(lesson);
      modified(schedule);
  }
  
  rule lessonSelection2 {
  /* If the LO lessons are allocated, the HV lessons are up next */
    declarations
      Lesson lesson;
      Schedule schedule;
    conditions
      schedule.schedulingSetIsEmpty();
      schedule.containsUnallocatedLesson(lesson);
      lesson.getSubject().getCode().equals("HV");
      !lesson.isAllocatedToTimeslot();
    actions
	  schedule.addToSchedulingSet(lesson);
      modified(schedule);
  }
  
  rule lessonSelection3 {
  /* If the previous rules don't apply, pick a random lesson to allocate */
    declarations
      Lesson lesson;
      Schedule schedule;
    conditions
      schedule.schedulingSetIsEmpty();
      schedule.containsUnallocatedLesson(lesson);
    actions
      schedule.addToSchedulingSet(lesson);
      modified(schedule);
  }

}